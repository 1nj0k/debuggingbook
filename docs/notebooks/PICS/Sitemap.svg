<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: %3 Pages: 1 -->
<svg width="169pt" height="190pt"
 viewBox="0.00 0.00 169.00 190.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 186)">
<title>%3</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-186 165,-186 165,4 -4,4"/>
<!-- Tracer -->
<g id="node1" class="node">
<title>Tracer</title>
<g id="a_node1"><a xlink:href="Tracer.ipynb" xlink:title="Tracing Executions (Tracer)&#10;&#10;In this chapter, we show how to observe program state during an execution – a prerequisite for logging and interactive debugging. Thanks to the power of Python, we can do this in a few lines of code.">
<polygon fill="#ffffff" stroke="#000000" points="144.5,-108 10.5,-108 10.5,-72 150.5,-72 150.5,-102 144.5,-108"/>
<polyline fill="none" stroke="#000000" points="144.5,-108 144.5,-102 "/>
<polyline fill="none" stroke="#000000" points="150.5,-102 144.5,-102 "/>
<text text-anchor="middle" x="80.5" y="-86.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="14.00" fill="#6a0dad">Tracing Executions</text>
</a>
</g>
</g>
<!-- Debugger -->
<g id="node2" class="node">
<title>Debugger</title>
<g id="a_node2"><a xlink:href="Debugger.ipynb" xlink:title="How Debuggers Work (Debugger)&#10;&#10;Interactive debuggers are tools that allow you to selectively observe the program state during an execution. &#160;In this chapter, you will learn how such debuggers work – by building your own debugger.">
<polygon fill="#ffffff" stroke="#000000" points="155,-36 0,-36 0,0 161,0 161,-30 155,-36"/>
<polyline fill="none" stroke="#000000" points="155,-36 155,-30 "/>
<polyline fill="none" stroke="#000000" points="161,-30 155,-30 "/>
<text text-anchor="middle" x="80.5" y="-14.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="14.00" fill="#6a0dad">How Debuggers Work</text>
</a>
</g>
</g>
<!-- Tracer&#45;&gt;Debugger -->
<g id="edge1" class="edge">
<title>Tracer&#45;&gt;Debugger</title>
<path fill="none" stroke="#000000" d="M80.5,-71.8314C80.5,-64.131 80.5,-54.9743 80.5,-46.4166"/>
<polygon fill="#000000" stroke="#000000" points="84.0001,-46.4132 80.5,-36.4133 77.0001,-46.4133 84.0001,-46.4132"/>
</g>
<!-- Intro_Debugging -->
<g id="node3" class="node">
<title>Intro_Debugging</title>
<g id="a_node3"><a xlink:href="Intro_Debugging.ipynb" xlink:title="Introduction to Debugging (Intro_Debugging)&#10;&#10;In this book, we want to explore debugging &#45; the art and science of fixing bugs in computer software. In particular, we want to explore techniques that automatically answer questions like: Where is the bug? When does it occur? And how can we repair it? But before we start automating the debugging process, we first need to understand what this process is.">
<polygon fill="#ffffff" stroke="#000000" points="130.5,-182 24.5,-182 24.5,-144 136.5,-144 136.5,-176 130.5,-182"/>
<polyline fill="none" stroke="#000000" points="130.5,-182 130.5,-176 "/>
<polyline fill="none" stroke="#000000" points="136.5,-176 130.5,-176 "/>
<text text-anchor="middle" x="80.5" y="-166.8" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="14.00" fill="#6a0dad">Introduction to</text>
<text text-anchor="middle" x="80.5" y="-151.8" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="14.00" fill="#6a0dad">Debugging</text>
</a>
</g>
</g>
<!-- Intro_Debugging&#45;&gt;Tracer -->
<g id="edge2" class="edge">
<title>Intro_Debugging&#45;&gt;Tracer</title>
<path fill="none" stroke="#000000" d="M80.5,-143.8201C80.5,-136.0975 80.5,-127.0282 80.5,-118.5585"/>
<polygon fill="#000000" stroke="#000000" points="84.0001,-118.2973 80.5,-108.2973 77.0001,-118.2974 84.0001,-118.2973"/>
</g>
</g>
</svg>
