<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: %3 Pages: 1 -->
<svg width="163pt" height="541pt"
 viewBox="0.00 0.00 163.00 541.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 537)">
<title>%3</title>
<g id="a_graph0"><a xlink:title="DeltaDebugger hierarchy">
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-537 159,-537 159,4 -4,4"/>
</a>
</g>
<!-- DeltaDebugger -->
<g id="node1" class="node">
<title>DeltaDebugger</title>
<g id="a_node1"><a xlink:href="#" xlink:title="DeltaDebugger">
<polygon fill="none" stroke="#000000" points="0,-.5 0,-130.5 155,-130.5 155,-.5 0,-.5"/>
<text text-anchor="start" x="25.5" y="-116.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#a020f0">DeltaDebugger</text>
<polyline fill="none" stroke="#000000" points="0,-107.5 155,-107.5 "/>
<g id="a_node1_0"><a xlink:href="#" xlink:title="DeltaDebugger">
<g id="a_node1_1"><a xlink:href="#" xlink:title="General Delta Debugging. fail_args &#45; a dict of (failure&#45;inducing) function arguments; fail_args[var_to_be_reduced] &#45; the input to apply dd on. mode tells how the algorithm should operate: &#39;&#45;&#39;: minimize input (ddmin), &#39;+&#39;: maximizing input (ddmax), &#39;+&#45;&#39;: minimizing pass/fail difference (dd) Returns a triple (pass, fail, diff) with maximized passing input, minimized failing input, and their difference (elems in fail, but not in pass). ">
<text text-anchor="start" x="8.5" y="-96" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">dd()</text>
</a>
</g>
<g id="a_node1_2"><a xlink:href="#" xlink:title="Return 1&#45;maximal arguments.">
<text text-anchor="start" x="8.5" y="-85" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">max_args()</text>
</a>
</g>
<g id="a_node1_3"><a xlink:href="#" xlink:title="Return 1&#45;minimal difference between arguments.">
<text text-anchor="start" x="8.5" y="-74" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">min_arg_diff()</text>
</a>
</g>
<g id="a_node1_4"><a xlink:href="#" xlink:title="Return 1&#45;minimal arguments.">
<text text-anchor="start" x="8.5" y="-63" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">min_args()</text>
</a>
</g>
<g id="a_node1_5"><a xlink:href="#" xlink:title="Reduce all reducible arguments, using strategy(var, args). Can be overloaded in subclasses.">
<text text-anchor="start" x="8.5" y="-52" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">process_args()</text>
</a>
</g>
<g id="a_node1_6"><a xlink:href="#" xlink:title="__repr__()">
<text text-anchor="start" x="8.5" y="-40" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">__repr__()</text>
</a>
</g>
<g id="a_node1_7"><a xlink:href="#" xlink:title="after_collection()">
<text text-anchor="start" x="8.5" y="-29" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">after_collection()</text>
</a>
</g>
<g id="a_node1_8"><a xlink:href="#" xlink:title="check_reproducibility()">
<text text-anchor="start" x="8.5" y="-18" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">check_reproducibility()</text>
</a>
</g>
<g id="a_node1_9"><a xlink:href="#" xlink:title="reducible()">
<text text-anchor="start" x="8.5" y="-7" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">reducible()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- CachingCallReducer -->
<g id="node2" class="node">
<title>CachingCallReducer</title>
<g id="a_node2"><a xlink:href="#" xlink:title="Like CallReducer, but cache test outcomes.">
<polygon fill="none" stroke="#000000" points="0,-167.5 0,-220.5 155,-220.5 155,-167.5 0,-167.5"/>
<text text-anchor="start" x="8" y="-206.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#a020f0">CachingCallReducer</text>
<polyline fill="none" stroke="#000000" points="0,-197.5 155,-197.5 "/>
<g id="a_node2_10"><a xlink:href="#" xlink:title="CachingCallReducer">
<g id="a_node2_11"><a xlink:href="#" xlink:title="reset()">
<text text-anchor="start" x="56.5" y="-185.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">reset()</text>
</a>
</g>
<g id="a_node2_12"><a xlink:href="#" xlink:title="test()">
<text text-anchor="start" x="56.5" y="-174.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">test()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- DeltaDebugger&#45;&gt;CachingCallReducer -->
<g id="edge1" class="edge">
<title>DeltaDebugger&#45;&gt;CachingCallReducer</title>
<path fill="none" stroke="#000000" d="M77.5,-130.5029C77.5,-139.6945 77.5,-148.8656 77.5,-157.2635"/>
<polygon fill="none" stroke="#000000" points="74.0001,-157.4307 77.5,-167.4307 81.0001,-157.4308 74.0001,-157.4307"/>
</g>
<!-- CallReducer -->
<g id="node3" class="node">
<title>CallReducer</title>
<g id="a_node3"><a xlink:href="#" xlink:title="CallReducer">
<polygon fill="none" stroke="#000000" points="27.5,-257.5 27.5,-343.5 127.5,-343.5 127.5,-257.5 27.5,-257.5"/>
<text text-anchor="start" x="35.5" y="-329.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#a020f0">CallReducer</text>
<polyline fill="none" stroke="#000000" points="27.5,-320.5 127.5,-320.5 "/>
<g id="a_node3_13"><a xlink:href="#" xlink:title="CallReducer">
<g id="a_node3_14"><a xlink:href="#" xlink:title="Initialize. If log is True, enable logging.">
<text text-anchor="start" x="41.5" y="-309" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">__init__()</text>
</a>
</g>
<g id="a_node3_15"><a xlink:href="#" xlink:title="Determine and return a minimal value for var_to_be_reduced. To be overloaded in subclasses.">
<text text-anchor="start" x="41.5" y="-298" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">reduce_arg()</text>
</a>
</g>
<g id="a_node3_16"><a xlink:href="#" xlink:title="Reset the number of tests.">
<text text-anchor="start" x="41.5" y="-287" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">reset()</text>
</a>
</g>
<g id="a_node3_17"><a xlink:href="#" xlink:title="Run collected function with args. Return * PASS if no exception occurred * FAIL if the collected exception occurred * UNRESOLVED if some other exception occurred. Not to be used directly; can be overloaded in subclasses. ">
<text text-anchor="start" x="41.5" y="-276" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">run()</text>
</a>
</g>
<g id="a_node3_18"><a xlink:href="#" xlink:title="Like run(), but also log detail and keep statistics.">
<text text-anchor="start" x="41.5" y="-265" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">test()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- CachingCallReducer&#45;&gt;CallReducer -->
<g id="edge2" class="edge">
<title>CachingCallReducer&#45;&gt;CallReducer</title>
<path fill="none" stroke="#000000" d="M77.5,-220.5997C77.5,-228.6572 77.5,-237.8116 77.5,-246.9767"/>
<polygon fill="none" stroke="#000000" points="74.0001,-247.2711 77.5,-257.2711 81.0001,-247.2712 74.0001,-247.2711"/>
</g>
<!-- CallCollector -->
<g id="node4" class="node">
<title>CallCollector</title>
<g id="a_node4"><a xlink:href="#" xlink:title="CallCollector">
<polygon fill="none" stroke="#000000" points="15,-380.5 15,-532.5 140,-532.5 140,-380.5 15,-380.5"/>
<text text-anchor="start" x="32.5" y="-518.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#a020f0">CallCollector</text>
<polyline fill="none" stroke="#000000" points="15,-509.5 140,-509.5 "/>
<g id="a_node4_19"><a xlink:href="#" xlink:title="CallCollector">
<g id="a_node4_20"><a xlink:href="#" xlink:title="Called at begin of `with` block. Turn tracing on.">
<text text-anchor="start" x="23.5" y="-498" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">__enter__()</text>
</a>
</g>
<g id="a_node4_21"><a xlink:href="#" xlink:title="Called at end of `with` block. Turn tracing off.">
<text text-anchor="start" x="23.5" y="-487" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">__exit__()</text>
</a>
</g>
<g id="a_node4_22"><a xlink:href="#" xlink:title="Initialize collector">
<text text-anchor="start" x="23.5" y="-476" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">__init__()</text>
</a>
</g>
<g id="a_node4_23"><a xlink:href="#" xlink:title="Called after collection. To be defined in subclasses.">
<text text-anchor="start" x="23.5" y="-465" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">after_collection()</text>
</a>
</g>
<g id="a_node4_24"><a xlink:href="#" xlink:title="Return the dictionary of collected arguments.">
<text text-anchor="start" x="23.5" y="-454" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">args()</text>
</a>
</g>
<g id="a_node4_25"><a xlink:href="#" xlink:title="Call collected function. If new_args is given, override arguments from its {var: value} entries.">
<text text-anchor="start" x="23.5" y="-443" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">call()</text>
</a>
</g>
<g id="a_node4_26"><a xlink:href="#" xlink:title="Return the exception produced.">
<text text-anchor="start" x="23.5" y="-432" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">exception()</text>
</a>
</g>
<g id="a_node4_27"><a xlink:href="#" xlink:title="Return a string representing a call of the function with given args.">
<text text-anchor="start" x="23.5" y="-421" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">format_call()</text>
</a>
</g>
<g id="a_node4_28"><a xlink:href="#" xlink:title="Return a string representing the given exception.">
<text text-anchor="start" x="23.5" y="-410" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">format_exception()</text>
</a>
</g>
<g id="a_node4_29"><a xlink:href="#" xlink:title="Return the function called.">
<text text-anchor="start" x="23.5" y="-399" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">function()</text>
</a>
</g>
<g id="a_node4_30"><a xlink:href="#" xlink:title="Tracing function. Collect first call, then turn tracing off.">
<text text-anchor="start" x="23.5" y="-388" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">traceit()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- CallReducer&#45;&gt;CallCollector -->
<g id="edge3" class="edge">
<title>CallReducer&#45;&gt;CallCollector</title>
<path fill="none" stroke="#000000" d="M77.5,-343.5406C77.5,-351.9519 77.5,-361.0469 77.5,-370.2976"/>
<polygon fill="none" stroke="#000000" points="74.0001,-370.3717 77.5,-380.3717 81.0001,-370.3717 74.0001,-370.3717"/>
</g>
</g>
</svg>
