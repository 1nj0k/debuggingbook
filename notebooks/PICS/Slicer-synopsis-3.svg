<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: %3 Pages: 1 -->
<svg width="455pt" height="745pt"
 viewBox="0.00 0.00 454.50 745.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 741)">
<title>%3</title>
<g id="a_graph0"><a xlink:title="Slicer class hierarchy">
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-741 450.5,-741 450.5,4 -4,4"/>
</a>
</g>
<!-- Slicer -->
<g id="node1" class="node">
<title>Slicer</title>
<g id="a_node1"><a xlink:href="#" xlink:title="class Slicer:&#10;Track dependencies in an execution">
<polygon fill="none" stroke="#000000" points="0,-48.5 0,-200.5 101,-200.5 101,-48.5 0,-48.5"/>
<text text-anchor="start" x="31" y="-186.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">Slicer</text>
<polyline fill="none" stroke="#000000" points="0,-177.5 101,-177.5 "/>
<g id="a_node1_0"><a xlink:href="#" xlink:title="Slicer">
<g id="a_node1_1"><a xlink:href="#" xlink:title="__init__(self, *items_to_instrument, dependency_tracker=None, globals=None, log=False):&#10;Create a slicer.&#10;`items_to_instrument` are Python functions&#10;or modules with source code.&#10;`dependency_tracker` is the tracker to be used&#10;(default: DependencyTracker).&#10;`globals` is the namespace to be used&#10;(default: caller&#39;s `globals()`)&#10;`log`=True or `log` &gt; 0 turns on logging">
<text text-anchor="start" x="8.5" y="-166" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">__init__()</text>
</a>
</g>
<g id="a_node1_2"><a xlink:href="#" xlink:title="_repr_svg_(self):&#10;If the object is output in Jupyter, render dependencies as a SVG graph">
<text text-anchor="start" x="8.5" y="-155" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">_repr_svg_()</text>
</a>
</g>
<g id="a_node1_3"><a xlink:href="#" xlink:title="code(self, *args, **kwargs):&#10;Show code of instrumented items, annotated with dependencies.">
<text text-anchor="start" x="8.5" y="-144" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">code()</text>
</a>
</g>
<g id="a_node1_4"><a xlink:href="#" xlink:title="dependencies(self):&#10;Return collected dependencies.">
<text text-anchor="start" x="8.5" y="-133" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">dependencies()</text>
</a>
</g>
<g id="a_node1_5"><a xlink:href="#" xlink:title="graph(self, *args, **kwargs):&#10;Show dependency graph.">
<text text-anchor="start" x="8.5" y="-122" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">graph()</text>
</a>
</g>
<g id="a_node1_6"><a xlink:href="#" xlink:title="execute(self, tree, item):&#10;Compile and execute `tree`. May be extended in subclasses.">
<text text-anchor="start" x="8.5" y="-111" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">execute()</text>
</a>
</g>
<g id="a_node1_7"><a xlink:href="#" xlink:title="instrument(self, item):&#10;Instrument `item`, transforming its source code,&#10;and re&#45;defining it.">
<text text-anchor="start" x="8.5" y="-100" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">instrument()</text>
</a>
</g>
<g id="a_node1_8"><a xlink:href="#" xlink:title="parse(self, item):&#10;Parse `item`, returning its AST">
<text text-anchor="start" x="8.5" y="-88" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">parse()</text>
</a>
</g>
<g id="a_node1_9"><a xlink:href="#" xlink:title="restore(self):&#10;Restore original code.">
<text text-anchor="start" x="8.5" y="-78" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">restore()</text>
</a>
</g>
<g id="a_node1_10"><a xlink:href="#" xlink:title="transform(self, tree):&#10;Apply transformers on `tree`. May be extended in subclasses.">
<text text-anchor="start" x="8.5" y="-67" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">transform()</text>
</a>
</g>
<g id="a_node1_11"><a xlink:href="#" xlink:title="transformers(self):&#10;List of transformers to apply. To be extended in subclasses.">
<text text-anchor="start" x="8.5" y="-56" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">transformers()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- Instrumenter -->
<g id="node2" class="node">
<title>Instrumenter</title>
<g id="a_node2"><a xlink:href="#" xlink:title="class Instrumenter:&#10;Instrument functions for dynamic tracking">
<polygon fill="none" stroke="#000000" points="22,-390 22,-476 123,-476 123,-390 22,-390"/>
<text text-anchor="start" x="30" y="-461.8" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-style="italic" font-size="14.00" fill="#6a0dad">Instrumenter</text>
<polyline fill="none" stroke="#000000" points="22,-453 123,-453 "/>
<g id="a_node2_12"><a xlink:href="#" xlink:title="Instrumenter">
<g id="a_node2_13"><a xlink:href="#" xlink:title="__enter__(self):&#10;Instrument sources">
<text text-anchor="start" x="36.5" y="-441.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">__enter__()</text>
</a>
</g>
<g id="a_node2_14"><a xlink:href="#" xlink:title="__exit__(self, exc_type, exc_value, traceback):&#10;Restore sources">
<text text-anchor="start" x="36.5" y="-430.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">__exit__()</text>
</a>
</g>
<g id="a_node2_15"><a xlink:href="#" xlink:title="__init__(self, *items_to_instrument, globals=None, log=False):&#10;Create an instrumenter.&#10;`items_to_instrument` is a list of items to instrument.&#10;`globals` is a namespace to use (default: caller&#39;s globals())">
<text text-anchor="start" x="36.5" y="-419.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">__init__()</text>
</a>
</g>
<g id="a_node2_16"><a xlink:href="#" xlink:title="instrument(self, item):&#10;Instrument `item`. To be overloaded in subclasses.">
<text text-anchor="start" x="36.5" y="-408.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">instrument()</text>
</a>
</g>
<g id="a_node2_17"><a xlink:href="#" xlink:title="restore(self)">
<text text-anchor="start" x="36.5" y="-397.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">restore()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- Slicer&#45;&gt;Instrumenter -->
<g id="edge1" class="edge">
<title>Slicer&#45;&gt;Instrumenter</title>
<path fill="none" stroke="#000000" d="M55.9382,-200.7584C59.9059,-256.3963 65.1837,-330.4053 68.7042,-379.7719"/>
<polygon fill="none" stroke="#000000" points="65.2251,-380.191 69.4276,-389.9167 72.2073,-379.6931 65.2251,-380.191"/>
</g>
<!-- StackInspector -->
<g id="node3" class="node">
<title>StackInspector</title>
<g id="a_node3"><a xlink:href="#" xlink:title="class StackInspector:&#10;Provide functions to inspect the stack">
<polygon fill="none" stroke="#000000" points="143,-617.5 143,-736.5 262,-736.5 262,-617.5 143,-617.5"/>
<text text-anchor="start" x="152.5" y="-722.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-style="italic" font-size="14.00" fill="#6a0dad">StackInspector</text>
<polyline fill="none" stroke="#000000" points="143,-713.5 262,-713.5 "/>
<g id="a_node3_18"><a xlink:href="#" xlink:title="StackInspector">
<g id="a_node3_19"><a xlink:href="#" xlink:title="caller_frame(self):&#10;Return the frame of the caller.">
<text text-anchor="start" x="151.5" y="-702.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">caller_frame()</text>
</a>
</g>
<g id="a_node3_20"><a xlink:href="#" xlink:title="caller_function(self):&#10;Return the calling function">
<text text-anchor="start" x="151.5" y="-691.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">caller_function()</text>
</a>
</g>
<g id="a_node3_21"><a xlink:href="#" xlink:title="caller_globals(self):&#10;Return the globals() environment of the caller.">
<text text-anchor="start" x="151.5" y="-680.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">caller_globals()</text>
</a>
</g>
<g id="a_node3_22"><a xlink:href="#" xlink:title="caller_locals(self):&#10;Return the locals() environment of the caller.">
<text text-anchor="start" x="151.5" y="-669.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">caller_locals()</text>
</a>
</g>
<g id="a_node3_23"><a xlink:href="#" xlink:title="caller_location(self):&#10;Return the location (func, lineno) of the caller.">
<text text-anchor="start" x="151.5" y="-658.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">caller_location()</text>
</a>
</g>
<g id="a_node3_24"><a xlink:href="#" xlink:title="search_frame(self, name):&#10;Return a pair (`frame`, `item`)&#10;in which the function `name` is defined as `item`.">
<text text-anchor="start" x="151.5" y="-647.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">search_frame()</text>
</a>
</g>
<g id="a_node3_25"><a xlink:href="#" xlink:title="search_func(self, name):&#10;Search in callers for a definition of the function `name`">
<text text-anchor="start" x="151.5" y="-636.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">search_func()</text>
</a>
</g>
<g id="a_node3_26"><a xlink:href="#" xlink:title="unknown()">
<text text-anchor="start" x="151.5" y="-624.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">unknown()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- Instrumenter&#45;&gt;StackInspector -->
<g id="edge2" class="edge">
<title>Instrumenter&#45;&gt;StackInspector</title>
<path fill="none" stroke="#000000" d="M91.7002,-476.0139C105.3737,-505.8699 124.6053,-546.3465 143.5,-581 148.4323,-590.046 153.8324,-599.4332 159.299,-608.6383"/>
<polygon fill="none" stroke="#000000" points="156.403,-610.6146 164.5475,-617.391 162.4064,-607.0147 156.403,-610.6146"/>
</g>
<!-- DependencyTracker -->
<g id="node4" class="node">
<title>DependencyTracker</title>
<g id="a_node4"><a xlink:href="#" xlink:title="class DependencyTracker:&#10;Track dependencies during execution">
<polygon fill="none" stroke="#000000" points="119,-.5 119,-248.5 310,-248.5 310,-.5 119,-.5"/>
<text text-anchor="start" x="145.5" y="-234.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">DependencyTracker</text>
<polyline fill="none" stroke="#000000" points="119,-225.5 310,-225.5 "/>
<g id="a_node4_27"><a xlink:href="#" xlink:title="DependencyTracker">
<text text-anchor="start" x="202.5" y="-213" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">TEST</text>
</a>
</g>
<polyline fill="none" stroke="#000000" points="119,-206.5 310,-206.5 "/>
<g id="a_node4_28"><a xlink:href="#" xlink:title="DependencyTracker">
<g id="a_node4_29"><a xlink:href="#" xlink:title="__enter__(self):&#10;Track entering an if/while/for block">
<text text-anchor="start" x="127.5" y="-195.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">__enter__()</text>
</a>
</g>
<g id="a_node4_30"><a xlink:href="#" xlink:title="__exit__(self, exc_type, exc_value, traceback):&#10;Track exiting an if/while/for block">
<text text-anchor="start" x="127.5" y="-184.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">__exit__()</text>
</a>
</g>
<g id="a_node4_31"><a xlink:href="#" xlink:title="__init__(self, *args, **kwargs):&#10;Constructor. Arguments are passed to DataTracker.__init__()">
<text text-anchor="start" x="127.5" y="-173.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">__init__()</text>
</a>
</g>
<g id="a_node4_32"><a xlink:href="#" xlink:title="arg(self, value, pos=None, kw=None):&#10;Track passing an argument `value`&#10;(with given position `pos` 1..n or keyword `kw`)">
<text text-anchor="start" x="127.5" y="-162.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">arg()</text>
</a>
</g>
<g id="a_node4_33"><a xlink:href="#" xlink:title="call(self, func):&#10;Track a call of function `func`">
<text text-anchor="start" x="127.5" y="-151.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">call()</text>
</a>
</g>
<g id="a_node4_34"><a xlink:href="#" xlink:title="get(self, name, value):&#10;Track a read access for variable `name` with value `value`">
<text text-anchor="start" x="127.5" y="-140.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">get()</text>
</a>
</g>
<g id="a_node4_35"><a xlink:href="#" xlink:title="param(self, name, value, pos=None, vararg=&#39;&#39;, last=False):&#10;Track getting a parameter `name` with value `value`&#10;(with given position `pos`).&#10;vararg parameters are indicated by setting `varargs` to&#10;&#39;*&#39; (*args) or &#39;**&#39; (**kwargs)">
<text text-anchor="start" x="127.5" y="-129.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">param()</text>
</a>
</g>
<g id="a_node4_36"><a xlink:href="#" xlink:title="ret(self, value):&#10;Track a function return">
<text text-anchor="start" x="127.5" y="-118.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">ret()</text>
</a>
</g>
<g id="a_node4_37"><a xlink:href="#" xlink:title="set(self, name, value, loads=None):&#10;Add a dependency for `name` = `value`">
<text text-anchor="start" x="127.5" y="-107.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">set()</text>
</a>
</g>
<g id="a_node4_38"><a xlink:href="#" xlink:title="test(self, value):&#10;Track a test for condition `value`">
<text text-anchor="start" x="127.5" y="-96.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">test()</text>
</a>
</g>
<g id="a_node4_39"><a xlink:href="#" xlink:title="call_generator(self, func):&#10;Track a call of a generator function">
<text text-anchor="start" x="127.5" y="-84.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">call_generator()</text>
</a>
</g>
<g id="a_node4_40"><a xlink:href="#" xlink:title="check_location(self):&#10;If we are in a new location, clear set of read variables">
<text text-anchor="start" x="127.5" y="-73.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">check_location()</text>
</a>
</g>
<g id="a_node4_41"><a xlink:href="#" xlink:title="clear_read(self):&#10;Clear set of read variables">
<text text-anchor="start" x="127.5" y="-62.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">clear_read()</text>
</a>
</g>
<g id="a_node4_42"><a xlink:href="#" xlink:title="dependencies(self):&#10;Return dependencies">
<text text-anchor="start" x="127.5" y="-51.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">dependencies()</text>
</a>
</g>
<g id="a_node4_43"><a xlink:href="#" xlink:title="ignore_location_change(self)">
<text text-anchor="start" x="127.5" y="-40.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">ignore_location_change()</text>
</a>
</g>
<g id="a_node4_44"><a xlink:href="#" xlink:title="ignore_next_location_change(self)">
<text text-anchor="start" x="127.5" y="-29.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">ignore_next_location_change()</text>
</a>
</g>
<g id="a_node4_45"><a xlink:href="#" xlink:title="in_generator(self):&#10;True if we are calling a generator function">
<text text-anchor="start" x="127.5" y="-18.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">in_generator()</text>
</a>
</g>
<g id="a_node4_46"><a xlink:href="#" xlink:title="ret_generator(self, generator):&#10;Track the return of a generator function">
<text text-anchor="start" x="127.5" y="-7.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">ret_generator()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- DataTracker -->
<g id="node5" class="node">
<title>DataTracker</title>
<g id="a_node5"><a xlink:href="#" xlink:title="class DataTracker:&#10;Track data accesses during execution">
<polygon fill="none" stroke="#000000" points="152.5,-357 152.5,-509 252.5,-509 252.5,-357 152.5,-357"/>
<text text-anchor="start" x="160.5" y="-494.8" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">DataTracker</text>
<polyline fill="none" stroke="#000000" points="152.5,-486 252.5,-486 "/>
<g id="a_node5_47"><a xlink:href="#" xlink:title="DataTracker">
<g id="a_node5_48"><a xlink:href="#" xlink:title="__enter__(self):&#10;Enter `with` block. To be overloaded in subclasses.">
<text text-anchor="start" x="169.5" y="-474.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">__enter__()</text>
</a>
</g>
<g id="a_node5_49"><a xlink:href="#" xlink:title="__exit__(self, exc_type, exc_value, traceback):&#10;Exit `with` block. To be overloaded in subclasses.">
<text text-anchor="start" x="169.5" y="-463.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">__exit__()</text>
</a>
</g>
<g id="a_node5_50"><a xlink:href="#" xlink:title="__init__(self, log=False):&#10;Constructor. If `log` is set, turn on logging.">
<text text-anchor="start" x="169.5" y="-452.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">__init__()</text>
</a>
</g>
<g id="a_node5_51"><a xlink:href="#" xlink:title="arg(self, value, pos=None, kw=None):&#10;Track `value` being passed as argument.&#10;`pos` (if given) is the argument position (starting with 1).&#10;`kw` (if given) is the argument keyword.">
<text text-anchor="start" x="169.5" y="-441.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">arg()</text>
</a>
</g>
<g id="a_node5_52"><a xlink:href="#" xlink:title="augment(self, name, value):&#10;Track augmenting `name` with `value`.&#10;To be overloaded in subclasses.">
<text text-anchor="start" x="169.5" y="-430.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">augment()</text>
</a>
</g>
<g id="a_node5_53"><a xlink:href="#" xlink:title="call(self, func):&#10;Track a call to `func`.">
<text text-anchor="start" x="169.5" y="-419.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">call()</text>
</a>
</g>
<g id="a_node5_54"><a xlink:href="#" xlink:title="get(self, name, value):&#10;Track getting `value` from `name`.">
<text text-anchor="start" x="169.5" y="-408.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">get()</text>
</a>
</g>
<g id="a_node5_55"><a xlink:href="#" xlink:title="param(self, name, value, pos=None, vararg=&#39;&#39;, last=False):&#10;At the beginning of a function, track parameter `name` being set to `value`.&#10;`pos` is the position of the argument (starting with 1).&#10;`vararg` is &quot;*&quot; if `name` is a vararg parameter (as in *args),&#10;and &quot;**&quot; is `name` is a kwargs parameter (as in *kwargs).&#10;`last` is True if `name` is the last parameter.">
<text text-anchor="start" x="169.5" y="-397.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">param()</text>
</a>
</g>
<g id="a_node5_56"><a xlink:href="#" xlink:title="ret(self, value):&#10;Track `value` being used as return value.">
<text text-anchor="start" x="169.5" y="-386.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">ret()</text>
</a>
</g>
<g id="a_node5_57"><a xlink:href="#" xlink:title="set(self, name, value, loads=None):&#10;Track setting `name` to `value`.">
<text text-anchor="start" x="169.5" y="-375.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">set()</text>
</a>
</g>
<g id="a_node5_58"><a xlink:href="#" xlink:title="test(self, cond):&#10;Test condition `cond`. To be overloaded in subclasses.">
<text text-anchor="start" x="169.5" y="-364.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">test()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- DependencyTracker&#45;&gt;DataTracker -->
<g id="edge3" class="edge">
<title>DependencyTracker&#45;&gt;DataTracker</title>
<path fill="none" stroke="#000000" d="M209.671,-248.6452C208.3954,-281.4379 207.0464,-316.1193 205.8668,-346.4457"/>
<polygon fill="none" stroke="#000000" points="202.365,-346.4258 205.4736,-356.5543 209.3597,-346.6979 202.365,-346.4258"/>
</g>
<!-- DataTracker&#45;&gt;StackInspector -->
<g id="edge4" class="edge">
<title>DataTracker&#45;&gt;StackInspector</title>
<path fill="none" stroke="#000000" d="M202.5,-509.1995C202.5,-540.4807 202.5,-576.4614 202.5,-607.0629"/>
<polygon fill="none" stroke="#000000" points="199.0001,-607.22 202.5,-617.22 206.0001,-607.22 199.0001,-607.22"/>
</g>
<!-- Dependencies -->
<g id="node6" class="node">
<title>Dependencies</title>
<g id="a_node6"><a xlink:href="#" xlink:title="class Dependencies:&#10;A dependency graph">
<polygon fill="none" stroke="#000000" points="271,-285.5 271,-580.5 402,-580.5 402,-285.5 271,-285.5"/>
<text text-anchor="start" x="288" y="-566.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">Dependencies</text>
<polyline fill="none" stroke="#000000" points="271,-557.5 402,-557.5 "/>
<g id="a_node6_59"><a xlink:href="#" xlink:title="Dependencies">
<g id="a_node6_60"><a xlink:href="#" xlink:title="__init__(self, data=None, control=None):&#10;Create a dependency graph from `data` and `control`.&#10;Both `data` and `control` are dictionaries&#10;holding _nodes_ as keys and sets of nodes as values.&#10;Each node comes as a tuple (variable_name, location)&#10;where `variable_name` is a string&#10;and `location` is a pair (function, lineno)&#10;where `function` is a callable and `lineno` is a line number&#10;denoting a unique location in the code.&#10;">
<text text-anchor="start" x="279.5" y="-546.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">__init__()</text>
</a>
</g>
<g id="a_node6_61"><a xlink:href="#" xlink:title="__repr__(self):&#10;Represent dependencies as a Python expression">
<text text-anchor="start" x="279.5" y="-535.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">__repr__()</text>
</a>
</g>
<g id="a_node6_62"><a xlink:href="#" xlink:title="__str__(self):&#10;Return string representation of dependencies">
<text text-anchor="start" x="279.5" y="-524.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">__str__()</text>
</a>
</g>
<g id="a_node6_63"><a xlink:href="#" xlink:title="_repr_svg_(self):&#10;If the object is output in Jupyter, render dependencies as a SVG graph">
<text text-anchor="start" x="279.5" y="-513.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">_repr_svg_()</text>
</a>
</g>
<g id="a_node6_64"><a xlink:href="#" xlink:title="all_functions(self):&#10;Return mapping {`function`: [(`lineno`, `var`), (`lineno`, `var`), ...], ...}&#10;for all functions in the dependencies.">
<text text-anchor="start" x="279.5" y="-502.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">all_functions()</text>
</a>
</g>
<g id="a_node6_65"><a xlink:href="#" xlink:title="all_vars(self):&#10;Return a set of all variables (as `var_name`, `location`) in the dependencies">
<text text-anchor="start" x="279.5" y="-491.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">all_vars()</text>
</a>
</g>
<g id="a_node6_66"><a xlink:href="#" xlink:title="backward_slice(self, *criteria, mode=&#39;cd&#39;, depth=&#45;1):&#10;Create a backward slice from nodes `criteria`.&#10;`mode` can contain &#39;c&#39; (draw control dependencies)&#10;and &#39;d&#39; (draw data dependencies) (default: &#39;cd&#39;)">
<text text-anchor="start" x="279.5" y="-480.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">backward_slice()</text>
</a>
</g>
<g id="a_node6_67"><a xlink:href="#" xlink:title="code(self, *items, mode=&#39;cd&#39;):&#10;List `items` on standard output,&#10;including dependencies as comments.&#10;If `items` is empty, all included functions are listed.&#10;`mode` can contain &#39;c&#39; (draw control dependencies)&#10;and &#39;d&#39; (draw data dependencies) (default: &#39;cd&#39;).">
<text text-anchor="start" x="279.5" y="-469.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">code()</text>
</a>
</g>
<g id="a_node6_68"><a xlink:href="#" xlink:title="graph(self):&#10;Draw dependencies.">
<text text-anchor="start" x="279.5" y="-458.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">graph()</text>
</a>
</g>
<g id="a_node6_69"><a xlink:href="#" xlink:title="_code(self, item, mode)">
<text text-anchor="start" x="279.5" y="-446.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">_code()</text>
</a>
</g>
<g id="a_node6_70"><a xlink:href="#" xlink:title="_source(self, node)">
<text text-anchor="start" x="279.5" y="-435.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">_source()</text>
</a>
</g>
<g id="a_node6_71"><a xlink:href="#" xlink:title="add_hierarchy(self, g):&#10;Add invisible edges for a proper hierarchy.">
<text text-anchor="start" x="279.5" y="-424.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">add_hierarchy()</text>
</a>
</g>
<g id="a_node6_72"><a xlink:href="#" xlink:title="draw_dependencies(self, g)">
<text text-anchor="start" x="279.5" y="-413.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">draw_dependencies()</text>
</a>
</g>
<g id="a_node6_73"><a xlink:href="#" xlink:title="expand_criteria(self, criteria):&#10;Return list of vars matched by `criteria`.">
<text text-anchor="start" x="279.5" y="-402.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">expand_criteria()</text>
</a>
</g>
<g id="a_node6_74"><a xlink:href="#" xlink:title="format_var(self, var, current_func=None):&#10;Return string for `var` in `current_func`.">
<text text-anchor="start" x="279.5" y="-391.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">format_var()</text>
</a>
</g>
<g id="a_node6_75"><a xlink:href="#" xlink:title="id(self, var):&#10;Return a unique ID for `var`.">
<text text-anchor="start" x="279.5" y="-380.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">id()</text>
</a>
</g>
<g id="a_node6_76"><a xlink:href="#" xlink:title="label(self, var):&#10;Render node `var` using HTML style.">
<text text-anchor="start" x="279.5" y="-369.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">label()</text>
</a>
</g>
<g id="a_node6_77"><a xlink:href="#" xlink:title="make_graph(self, name=&#39;dependencies&#39;, comment=&#39;Dependencies&#39;)">
<text text-anchor="start" x="279.5" y="-358.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">make_graph()</text>
</a>
</g>
<g id="a_node6_78"><a xlink:href="#" xlink:title="repr_dependencies(self, vars)">
<text text-anchor="start" x="279.5" y="-347.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">repr_dependencies()</text>
</a>
</g>
<g id="a_node6_79"><a xlink:href="#" xlink:title="repr_deps(self, var_set)">
<text text-anchor="start" x="279.5" y="-336.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">repr_deps()</text>
</a>
</g>
<g id="a_node6_80"><a xlink:href="#" xlink:title="repr_var(self, var)">
<text text-anchor="start" x="279.5" y="-325.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">repr_var()</text>
</a>
</g>
<g id="a_node6_81"><a xlink:href="#" xlink:title="source(self, node):&#10;Return the source code for a given node.">
<text text-anchor="start" x="279.5" y="-314.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">source()</text>
</a>
</g>
<g id="a_node6_82"><a xlink:href="#" xlink:title="tooltip(self, var):&#10;Return a tooltip for node `var`.">
<text text-anchor="start" x="279.5" y="-303.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">tooltip()</text>
</a>
</g>
<g id="a_node6_83"><a xlink:href="#" xlink:title="validate(self):&#10;Perform a simple syntactic validation of dependencies">
<text text-anchor="start" x="279.5" y="-292.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">validate()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- Dependencies&#45;&gt;StackInspector -->
<g id="edge5" class="edge">
<title>Dependencies&#45;&gt;StackInspector</title>
<path fill="none" stroke="#000000" d="M270.8216,-564.0463C267.7101,-569.7964 264.594,-575.4694 261.5,-581 256.4697,-589.9918 251.0119,-599.3472 245.5155,-608.5358"/>
<polygon fill="none" stroke="#000000" points="242.4113,-606.9059 240.2466,-617.2772 248.4065,-610.5195 242.4113,-606.9059"/>
</g>
<!-- Legend -->
<g id="node7" class="node">
<title>Legend</title>
<text text-anchor="start" x="328.5" y="-142" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="10.00" fill="#6a0dad">Legend</text>
<text text-anchor="start" x="328.5" y="-132" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00" fill="#000000">• </text>
<text text-anchor="start" x="335.5" y="-132" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="8.00" fill="#000000">public_method()</text>
<text text-anchor="start" x="328.5" y="-122" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00" fill="#000000">• </text>
<text text-anchor="start" x="335.5" y="-122" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="8.00" fill="#000000">private_method()</text>
<text text-anchor="start" x="328.5" y="-112" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00" fill="#000000">• </text>
<text text-anchor="start" x="335.5" y="-112" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="8.00" fill="#000000">overloaded_method()</text>
<text text-anchor="start" x="328.5" y="-102.8" font-family="Helvetica,sans-Serif" font-size="9.00" fill="#000000">Hover over names to see doc</text>
</g>
</g>
</svg>
