<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: %3 Pages: 1 -->
<svg width="458pt" height="484pt"
 viewBox="0.00 0.00 457.50 484.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 480)">
<title>%3</title>
<g id="a_graph0"><a xlink:title="CoverageCollector class hierarchy">
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-480 453.5,-480 453.5,4 -4,4"/>
</a>
</g>
<!-- CoverageCollector -->
<g id="node1" class="node">
<title>CoverageCollector</title>
<g id="a_node1"><a xlink:href="#" xlink:title="class CoverageCollector:&#10;A class to record covered locations during execution.">
<polygon fill="none" stroke="#000000" points="169.5,-.5 169.5,-86.5 313.5,-86.5 313.5,-.5 169.5,-.5"/>
<text text-anchor="start" x="177.5" y="-72.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">CoverageCollector</text>
<polyline fill="none" stroke="#000000" points="169.5,-63.5 313.5,-63.5 "/>
<g id="a_node1_0"><a xlink:href="#" xlink:title="CoverageCollector">
<g id="a_node1_1"><a xlink:href="#" xlink:title="coverage(self) &#45;&gt; Set[Tuple[Callable, int]]:&#10;Return a set (function, lineno) with all locations covered.">
<text text-anchor="start" x="184.5" y="-52" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">coverage()</text>
</a>
</g>
<g id="a_node1_2"><a xlink:href="#" xlink:title="covered_functions(self) &#45;&gt; Set[Callable]:&#10;Return a set with all functions covered.">
<text text-anchor="start" x="184.5" y="-41" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">covered_functions()</text>
</a>
</g>
<g id="a_node1_3"><a xlink:href="#" xlink:title="events(self) &#45;&gt; Set[Tuple[str, int]]:&#10;Return the set of locations covered.&#10;Each location comes as a pair (`function_name`, `lineno`).">
<text text-anchor="start" x="184.5" y="-30" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">events()</text>
</a>
</g>
<g id="a_node1_4"><a xlink:href="#" xlink:title="__init__(self) &#45;&gt; None:&#10;Constructor.">
<text text-anchor="start" x="184.5" y="-19" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">__init__()</text>
</a>
</g>
<g id="a_node1_5"><a xlink:href="#" xlink:title="collect(self, frame:frame, event:str, arg:Any) &#45;&gt; None:&#10;Save coverage for an observed event.">
<text text-anchor="start" x="184.5" y="-8" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">collect()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- Collector -->
<g id="node2" class="node">
<title>Collector</title>
<g id="a_node2"><a xlink:href="#" xlink:title="class Collector:&#10;A class to record events during execution.">
<polygon fill="none" stroke="#000000" points="0,-123.5 0,-308.5 155,-308.5 155,-123.5 0,-123.5"/>
<text text-anchor="start" x="46" y="-294.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">Collector</text>
<polyline fill="none" stroke="#000000" points="0,-285.5 155,-285.5 "/>
<g id="a_node2_6"><a xlink:href="#" xlink:title="Collector">
<g id="a_node2_7"><a xlink:href="#" xlink:title="__init__(self) &#45;&gt; None:&#10;Constructor.">
<text text-anchor="start" x="8.5" y="-274.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">__init__()</text>
</a>
</g>
<g id="a_node2_8"><a xlink:href="#" xlink:title="__repr__(self) &#45;&gt; str:&#10;Return a string representation of the collector">
<text text-anchor="start" x="8.5" y="-263.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">__repr__()</text>
</a>
</g>
<g id="a_node2_9"><a xlink:href="#" xlink:title="args(self) &#45;&gt; Dict[str, Any]:&#10;Return a dict of argument names and values from the first call">
<text text-anchor="start" x="8.5" y="-252.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">args()</text>
</a>
</g>
<g id="a_node2_10"><a xlink:href="#" xlink:title="argstring(self) &#45;&gt; str:&#10;Return the list of arguments from the first call, as a printable string">
<text text-anchor="start" x="8.5" y="-241.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">argstring()</text>
</a>
</g>
<g id="a_node2_11"><a xlink:href="#" xlink:title="collect(self, frame:frame, event:str, arg:Any) &#45;&gt; None:&#10;Collector function. To be overloaded in subclasses.">
<text text-anchor="start" x="8.5" y="-230.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">collect()</text>
</a>
</g>
<g id="a_node2_12"><a xlink:href="#" xlink:title="exception(self) &#45;&gt; Union[Type, NoneType]:&#10;Return the exception class from the first call,&#10;or None if no exception was raised.">
<text text-anchor="start" x="8.5" y="-219.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">exception()</text>
</a>
</g>
<g id="a_node2_13"><a xlink:href="#" xlink:title="function(self) &#45;&gt; Callable:&#10;Return the function from the first call, as a function object">
<text text-anchor="start" x="8.5" y="-208.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">function()</text>
</a>
</g>
<g id="a_node2_14"><a xlink:href="#" xlink:title="id(self) &#45;&gt; str:&#10;Return an identifier for the collector,&#10;created from the first call">
<text text-anchor="start" x="8.5" y="-197.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">id()</text>
</a>
</g>
<g id="a_node2_15"><a xlink:href="#" xlink:title="__exit__(self, exc_tp:Type, exc_value:BaseException, exc_traceback:traceback) &#45;&gt; Union[bool, NoneType]:&#10;Exit the `with` block.">
<text text-anchor="start" x="8.5" y="-186.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">__exit__()</text>
</a>
</g>
<g id="a_node2_16"><a xlink:href="#" xlink:title="add_classes_to_ignore(self, classes_to_ignore:List[Type]):&#10;Define additional classes to ignore during collection&#10;(typically `Debugger` classes using these collectors).">
<text text-anchor="start" x="8.5" y="-174.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">add_classes_to_ignore()</text>
</a>
</g>
<g id="a_node2_17"><a xlink:href="#" xlink:title="coverage(self) &#45;&gt; Set[Tuple[Callable, int]]:&#10;Return a set (function, lineno) with locations covered.&#10;To be overloaded in subclasses.">
<text text-anchor="start" x="8.5" y="-164.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">coverage()</text>
</a>
</g>
<g id="a_node2_18"><a xlink:href="#" xlink:title="covered_functions(self) &#45;&gt; Set[Callable]:&#10;Set of covered functions. To be overloaded in subclasses.">
<text text-anchor="start" x="8.5" y="-153.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">covered_functions()</text>
</a>
</g>
<g id="a_node2_19"><a xlink:href="#" xlink:title="events(self) &#45;&gt; Set:&#10;Return a collection of events. To be overridden in subclasses.">
<text text-anchor="start" x="8.5" y="-142.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">events()</text>
</a>
</g>
<g id="a_node2_20"><a xlink:href="#" xlink:title="traceit(self, frame:frame, event:str, arg:Any) &#45;&gt; None:&#10;Tracing function. Saves the first function and calls collect().">
<text text-anchor="start" x="8.5" y="-131.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">traceit()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- CoverageCollector&#45;&gt;Collector -->
<g id="edge1" class="edge">
<title>CoverageCollector&#45;&gt;Collector</title>
<path fill="none" stroke="#000000" d="M199.4023,-86.6919C188.0324,-98.4315 175.7607,-111.1701 164.5,-123 163.7378,-123.8007 162.9722,-124.6056 162.2036,-125.4143"/>
<polygon fill="none" stroke="#000000" points="159.5595,-123.116 155.217,-132.78 164.6383,-127.9333 159.5595,-123.116"/>
</g>
<!-- StackInspector -->
<g id="node4" class="node">
<title>StackInspector</title>
<g id="a_node4"><a xlink:href="StackInspector.ipynb" xlink:title="class StackInspector:&#10;Provide functions to inspect the stack">
<polygon fill="none" stroke="#000000" points="173,-141.5 173,-290.5 340,-290.5 340,-141.5 173,-141.5"/>
<text text-anchor="start" x="205.5" y="-276.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">StackInspector</text>
<polyline fill="none" stroke="#000000" points="173,-267.5 340,-267.5 "/>
<g id="a_node4_21"><a xlink:href="#" xlink:title="StackInspector">
<g id="a_node4_22"><a xlink:href="StackInspector.ipynb" xlink:title="_generated_function_cache = {}">
<text text-anchor="start" x="181.5" y="-255" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">_generated_function_cache</text>
</a>
</g>
</a>
</g>
<polyline fill="none" stroke="#000000" points="173,-248.5 340,-248.5 "/>
<g id="a_node4_23"><a xlink:href="#" xlink:title="StackInspector">
<g id="a_node4_24"><a xlink:href="StackInspector.ipynb" xlink:title="caller_frame(self) &#45;&gt; frame:&#10;Return the frame of the caller.">
<text text-anchor="start" x="205.5" y="-236" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">caller_frame()</text>
</a>
</g>
<g id="a_node4_25"><a xlink:href="StackInspector.ipynb" xlink:title="caller_function(self) &#45;&gt; Callable:&#10;Return the calling function">
<text text-anchor="start" x="205.5" y="-225" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">caller_function()</text>
</a>
</g>
<g id="a_node4_26"><a xlink:href="StackInspector.ipynb" xlink:title="caller_globals(self) &#45;&gt; Dict[str, Any]:&#10;Return the globals() environment of the caller.">
<text text-anchor="start" x="205.5" y="-214" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">caller_globals()</text>
</a>
</g>
<g id="a_node4_27"><a xlink:href="StackInspector.ipynb" xlink:title="caller_locals(self) &#45;&gt; Dict[str, Any]:&#10;Return the locals() environment of the caller.">
<text text-anchor="start" x="205.5" y="-203" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">caller_locals()</text>
</a>
</g>
<g id="a_node4_28"><a xlink:href="StackInspector.ipynb" xlink:title="caller_location(self) &#45;&gt; Tuple[Callable, int]:&#10;Return the location (func, lineno) of the caller.">
<text text-anchor="start" x="205.5" y="-192" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">caller_location()</text>
</a>
</g>
<g id="a_node4_29"><a xlink:href="StackInspector.ipynb" xlink:title="create_function(self, frame:frame) &#45;&gt; Callable:&#10;Create function for given frame">
<text text-anchor="start" x="205.5" y="-181" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">create_function()</text>
</a>
</g>
<g id="a_node4_30"><a xlink:href="StackInspector.ipynb" xlink:title="search_frame(self, name:str, frame:Union[frame, NoneType]=None) &#45;&gt; Tuple[Union[frame, NoneType], Union[Callable, NoneType]]:&#10;Return a pair (`frame`, `item`)&#10;in which the function `name` is defined as `item`.">
<text text-anchor="start" x="205.5" y="-170" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">search_frame()</text>
</a>
</g>
<g id="a_node4_31"><a xlink:href="StackInspector.ipynb" xlink:title="search_func(self, name:str, frame:Union[frame, NoneType]=None) &#45;&gt; Union[Callable, NoneType]:&#10;Search in callers for a definition of the function `name`">
<text text-anchor="start" x="205.5" y="-159" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">search_func()</text>
</a>
</g>
<g id="a_node4_32"><a xlink:href="StackInspector.ipynb" xlink:title="unknown(self) &#45;&gt; None">
<text text-anchor="start" x="205.5" y="-148" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">unknown()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- CoverageCollector&#45;&gt;StackInspector -->
<g id="edge3" class="edge">
<title>CoverageCollector&#45;&gt;StackInspector</title>
<path fill="none" stroke="#000000" d="M245.2464,-86.5841C246.4281,-100.1729 247.7772,-115.6877 249.1211,-131.143"/>
<polygon fill="none" stroke="#000000" points="245.6485,-131.6106 250.0017,-141.2698 252.6222,-131.0042 245.6485,-131.6106"/>
</g>
<!-- Tracer -->
<g id="node3" class="node">
<title>Tracer</title>
<g id="a_node3"><a xlink:href="Tracer.ipynb" xlink:title="class Tracer:&#10;A class for tracing a piece of code. Use as `with Tracer(): block()`">
<polygon fill="none" stroke="#000000" points="0,-345.5 0,-475.5 155,-475.5 155,-345.5 0,-345.5"/>
<text text-anchor="start" x="55.5" y="-461.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">Tracer</text>
<polyline fill="none" stroke="#000000" points="0,-452.5 155,-452.5 "/>
<g id="a_node3_33"><a xlink:href="#" xlink:title="Tracer">
<g id="a_node3_34"><a xlink:href="Tracer.ipynb" xlink:title="__enter__(self) &#45;&gt; Any:&#10;Called at begin of `with` block. Turn tracing on.">
<text text-anchor="start" x="8.5" y="-441" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">__enter__()</text>
</a>
</g>
<g id="a_node3_35"><a xlink:href="Tracer.ipynb" xlink:title="__exit__(self, exc_tp:Type, exc_value:BaseException, exc_traceback:traceback) &#45;&gt; Union[bool, NoneType]:&#10;Called at end of `with` block. Turn tracing off.&#10;Return `None` if ok, not `None` if internal error.">
<text text-anchor="start" x="8.5" y="-430" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">__exit__()</text>
</a>
</g>
<g id="a_node3_36"><a xlink:href="Tracer.ipynb" xlink:title="__init__(self, file:TextIO=&lt;ipykernel.iostream.OutStream object at 0x7fd65d926ef0&gt;) &#45;&gt; None:&#10;Create a new tracer.&#10;If `file` is given, output to `file` instead of stdout.">
<text text-anchor="start" x="8.5" y="-419" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">__init__()</text>
</a>
</g>
<g id="a_node3_37"><a xlink:href="Tracer.ipynb" xlink:title="changed_vars(self, new_vars:Dict[str, Any]) &#45;&gt; Dict[str, Any]:&#10;Track changed variables, based on `new_vars` observed.">
<text text-anchor="start" x="8.5" y="-408" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">changed_vars()</text>
</a>
</g>
<g id="a_node3_38"><a xlink:href="Tracer.ipynb" xlink:title="_traceit(self, frame:frame, event:str, arg:Any) &#45;&gt; Union[Callable, NoneType]:&#10;Internal tracing function.">
<text text-anchor="start" x="8.5" y="-396" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">_traceit()</text>
</a>
</g>
<g id="a_node3_39"><a xlink:href="Tracer.ipynb" xlink:title="is_internal_error(self, exc_tp:Type, exc_value:BaseException, exc_traceback:traceback) &#45;&gt; bool:&#10;Return True if exception was raised from `Tracer` or a subclass.">
<text text-anchor="start" x="8.5" y="-385" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">is_internal_error()</text>
</a>
</g>
<g id="a_node3_40"><a xlink:href="Tracer.ipynb" xlink:title="log(self, *objects:Any, sep:str=&#39; &#39;, end:str=&#39;\n&#39;, flush:bool=False) &#45;&gt; None:&#10;Like print(), but always sending to file given at initialization,&#10;and always flushing">
<text text-anchor="start" x="8.5" y="-374" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">log()</text>
</a>
</g>
<g id="a_node3_41"><a xlink:href="Tracer.ipynb" xlink:title="print_debugger_status(self, frame:frame, event:str, arg:Any) &#45;&gt; None:&#10;Show current source line and changed vars">
<text text-anchor="start" x="8.5" y="-363" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">print_debugger_status()</text>
</a>
</g>
<g id="a_node3_42"><a xlink:href="Tracer.ipynb" xlink:title="traceit(self, frame:frame, event:str, arg:Any) &#45;&gt; None:&#10;Tracing function; called at every line. To be overloaded in subclasses.">
<text text-anchor="start" x="8.5" y="-353" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">traceit()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- Collector&#45;&gt;Tracer -->
<g id="edge2" class="edge">
<title>Collector&#45;&gt;Tracer</title>
<path fill="none" stroke="#000000" d="M77.5,-308.6929C77.5,-317.6241 77.5,-326.6067 77.5,-335.3385"/>
<polygon fill="none" stroke="#000000" points="74.0001,-335.4554 77.5,-345.4554 81.0001,-335.4555 74.0001,-335.4554"/>
</g>
<!-- ValueCollector -->
<g id="node5" class="node">
<title>ValueCollector</title>
<g id="a_node5"><a xlink:href="#" xlink:title="class ValueCollector:&#10;&quot;A class to collect local variables and their values.">
<polygon fill="none" stroke="#000000" points="18.5,-11.5 18.5,-75.5 136.5,-75.5 136.5,-11.5 18.5,-11.5"/>
<text text-anchor="start" x="26.5" y="-61.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">ValueCollector</text>
<polyline fill="none" stroke="#000000" points="18.5,-52.5 136.5,-52.5 "/>
<g id="a_node5_43"><a xlink:href="#" xlink:title="ValueCollector">
<g id="a_node5_44"><a xlink:href="#" xlink:title="__init__(self) &#45;&gt; None:&#10;Constructor.">
<text text-anchor="start" x="47.5" y="-41" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">__init__()</text>
</a>
</g>
<g id="a_node5_45"><a xlink:href="#" xlink:title="events(self) &#45;&gt; Set[str]:&#10;A set of (variable, value) pairs observed">
<text text-anchor="start" x="47.5" y="-30" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">events()</text>
</a>
</g>
<g id="a_node5_46"><a xlink:href="#" xlink:title="collect(self, frame:frame, event:str, arg:Any) &#45;&gt; None:&#10;Collector function. To be overloaded in subclasses.">
<text text-anchor="start" x="47.5" y="-19" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">collect()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- ValueCollector&#45;&gt;Collector -->
<g id="edge4" class="edge">
<title>ValueCollector&#45;&gt;Collector</title>
<path fill="none" stroke="#000000" d="M77.5,-75.5417C77.5,-86.4892 77.5,-99.3961 77.5,-112.8753"/>
<polygon fill="none" stroke="#000000" points="74.0001,-113.2714 77.5,-123.2715 81.0001,-113.2715 74.0001,-113.2714"/>
</g>
<!-- Legend -->
<g id="node6" class="node">
<title>Legend</title>
<text text-anchor="start" x="331.5" y="-61" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="10.00" fill="#6a0dad">Legend</text>
<text text-anchor="start" x="331.5" y="-51" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00" fill="#000000">• </text>
<text text-anchor="start" x="338.5" y="-51" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="8.00" fill="#000000">public_method()</text>
<text text-anchor="start" x="331.5" y="-41" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00" fill="#000000">• </text>
<text text-anchor="start" x="338.5" y="-41" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="8.00" fill="#000000">private_method()</text>
<text text-anchor="start" x="331.5" y="-31" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00" fill="#000000">• </text>
<text text-anchor="start" x="338.5" y="-31" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="8.00" fill="#000000">overloaded_method()</text>
<text text-anchor="start" x="331.5" y="-21.8" font-family="Helvetica,sans-Serif" font-size="9.00" fill="#000000">Hover over names to see doc</text>
</g>
</g>
</svg>
