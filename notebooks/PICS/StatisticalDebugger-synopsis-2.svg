<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: %3 Pages: 1 -->
<svg width="448pt" height="503pt"
 viewBox="0.00 0.00 447.50 503.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 499)">
<title>%3</title>
<g id="a_graph0"><a xlink:title="CoverageCollector class hierarchy">
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-499 443.5,-499 443.5,4 -4,4"/>
</a>
</g>
<!-- CoverageCollector -->
<g id="node1" class="node">
<title>CoverageCollector</title>
<g id="a_node1"><a xlink:href="#" xlink:title="class CoverageCollector:&#10;A class to record covered locations during execution.">
<polygon fill="none" stroke="#000000" points="0,-.5 0,-127.5 167,-127.5 167,-.5 0,-.5"/>
<text text-anchor="start" x="19.5" y="-113.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">CoverageCollector</text>
<polyline fill="none" stroke="#000000" points="0,-104.5 167,-104.5 "/>
<g id="a_node1_0"><a xlink:href="#" xlink:title="CoverageCollector">
<g id="a_node1_1"><a xlink:href="#" xlink:title="_generated_function_cache = {}">
<text text-anchor="start" x="8.5" y="-92" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">_generated_function_cache</text>
</a>
</g>
</a>
</g>
<polyline fill="none" stroke="#000000" points="0,-85.5 167,-85.5 "/>
<g id="a_node1_2"><a xlink:href="#" xlink:title="CoverageCollector">
<g id="a_node1_3"><a xlink:href="#" xlink:title="coverage(self) &#45;&gt; Set[Tuple[Callable, int]]:&#10;Return a set (function, lineno) with all locations covered.">
<text text-anchor="start" x="26.5" y="-74" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">coverage()</text>
</a>
</g>
<g id="a_node1_4"><a xlink:href="#" xlink:title="covered_functions(self) &#45;&gt; Set[Callable]:&#10;Return a set with all functions covered.">
<text text-anchor="start" x="26.5" y="-63" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">covered_functions()</text>
</a>
</g>
<g id="a_node1_5"><a xlink:href="#" xlink:title="events(self) &#45;&gt; Set[Tuple[str, int]]:&#10;Return the set of locations covered.&#10;Each location comes as a pair (`function_name`, `lineno`).">
<text text-anchor="start" x="26.5" y="-52" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">events()</text>
</a>
</g>
<g id="a_node1_6"><a xlink:href="#" xlink:title="__init__(self) &#45;&gt; None:&#10;Constructor.">
<text text-anchor="start" x="26.5" y="-41" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">__init__()</text>
</a>
</g>
<g id="a_node1_7"><a xlink:href="#" xlink:title="collect(self, frame:frame, event:str, arg:Any) &#45;&gt; None:&#10;Save coverage for an observed event.">
<text text-anchor="start" x="26.5" y="-30" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">collect()</text>
</a>
</g>
<g id="a_node1_8"><a xlink:href="#" xlink:title="search_frame(self, name:str, frame:Union[frame, NoneType]) &#45;&gt; Tuple[Union[frame, NoneType], Union[Callable, NoneType]]:&#10;Return a pair (`frame`, `item`)&#10;in which the function `name` is defined as `item`.">
<text text-anchor="start" x="26.5" y="-18" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">search_frame()</text>
</a>
</g>
<g id="a_node1_9"><a xlink:href="#" xlink:title="search_func(self, name:str, frame:frame) &#45;&gt; Union[Callable, NoneType]:&#10;Search in callers for a definition of the function `name`">
<text text-anchor="start" x="26.5" y="-7" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">search_func()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- Collector -->
<g id="node2" class="node">
<title>Collector</title>
<g id="a_node2"><a xlink:href="#" xlink:title="class Collector:&#10;A class to record events during execution.">
<polygon fill="none" stroke="#000000" points="98,-164.5 98,-327.5 229,-327.5 229,-164.5 98,-164.5"/>
<text text-anchor="start" x="132" y="-313.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">Collector</text>
<polyline fill="none" stroke="#000000" points="98,-304.5 229,-304.5 "/>
<g id="a_node2_10"><a xlink:href="#" xlink:title="Collector">
<g id="a_node2_11"><a xlink:href="#" xlink:title="__init__(self) &#45;&gt; None:&#10;Constructor.">
<text text-anchor="start" x="106.5" y="-293.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">__init__()</text>
</a>
</g>
<g id="a_node2_12"><a xlink:href="#" xlink:title="__repr__(self) &#45;&gt; str:&#10;Return a string representation of the collector">
<text text-anchor="start" x="106.5" y="-282.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">__repr__()</text>
</a>
</g>
<g id="a_node2_13"><a xlink:href="#" xlink:title="args(self) &#45;&gt; Dict[str, Any]:&#10;Return a dict of argument names and values from the first call">
<text text-anchor="start" x="106.5" y="-271.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">args()</text>
</a>
</g>
<g id="a_node2_14"><a xlink:href="#" xlink:title="argstring(self) &#45;&gt; str:&#10;Return the list of arguments from the first call, as a printable string">
<text text-anchor="start" x="106.5" y="-260.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">argstring()</text>
</a>
</g>
<g id="a_node2_15"><a xlink:href="#" xlink:title="collect(self, frame:frame, event:str, arg:Any) &#45;&gt; None:&#10;Collector function. To be overloaded in subclasses.">
<text text-anchor="start" x="106.5" y="-249.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">collect()</text>
</a>
</g>
<g id="a_node2_16"><a xlink:href="#" xlink:title="exception(self) &#45;&gt; Union[Type, NoneType]:&#10;Return the exception class from the first call,&#10;or None if no exception was raised.">
<text text-anchor="start" x="106.5" y="-238.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">exception()</text>
</a>
</g>
<g id="a_node2_17"><a xlink:href="#" xlink:title="function(self) &#45;&gt; Callable:&#10;Return the function from the first call, as a function object">
<text text-anchor="start" x="106.5" y="-227.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">function()</text>
</a>
</g>
<g id="a_node2_18"><a xlink:href="#" xlink:title="id(self) &#45;&gt; str:&#10;Return an identifier for the collector,&#10;created from the first call">
<text text-anchor="start" x="106.5" y="-216.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">id()</text>
</a>
</g>
<g id="a_node2_19"><a xlink:href="#" xlink:title="coverage(self) &#45;&gt; Set[Tuple[Callable, int]]:&#10;Return a set (function, lineno) with locations covered.&#10;To be overloaded in subclasses.">
<text text-anchor="start" x="106.5" y="-205.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">coverage()</text>
</a>
</g>
<g id="a_node2_20"><a xlink:href="#" xlink:title="covered_functions(self) &#45;&gt; Set[Callable]:&#10;Set of covered functions. To be overloaded in subclasses.">
<text text-anchor="start" x="106.5" y="-194.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">covered_functions()</text>
</a>
</g>
<g id="a_node2_21"><a xlink:href="#" xlink:title="events(self) &#45;&gt; Set:&#10;Return a collection of events. To be overridden in subclasses.">
<text text-anchor="start" x="106.5" y="-183.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">events()</text>
</a>
</g>
<g id="a_node2_22"><a xlink:href="#" xlink:title="traceit(self, frame:frame, event:str, arg:Any) &#45;&gt; None:&#10;Tracing function. Saves the first function and calls collect().">
<text text-anchor="start" x="106.5" y="-172.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">traceit()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- CoverageCollector&#45;&gt;Collector -->
<g id="edge1" class="edge">
<title>CoverageCollector&#45;&gt;Collector</title>
<path fill="none" stroke="#000000" d="M111.4801,-127.6548C115.4002,-136.5729 119.49,-145.8772 123.5787,-155.1791"/>
<polygon fill="none" stroke="#000000" points="120.4326,-156.7196 127.6608,-164.4658 126.8408,-153.9027 120.4326,-156.7196"/>
</g>
<!-- Tracer -->
<g id="node3" class="node">
<title>Tracer</title>
<g id="a_node3"><a xlink:href="Tracer.ipynb" xlink:title="class Tracer:&#10;A class for tracing a piece of code. Use as `with Tracer(): block()`">
<polygon fill="none" stroke="#000000" points="86,-364.5 86,-494.5 241,-494.5 241,-364.5 86,-364.5"/>
<text text-anchor="start" x="141.5" y="-480.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">Tracer</text>
<polyline fill="none" stroke="#000000" points="86,-471.5 241,-471.5 "/>
<g id="a_node3_23"><a xlink:href="#" xlink:title="Tracer">
<g id="a_node3_24"><a xlink:href="Tracer.ipynb" xlink:title="__enter__(self) &#45;&gt; Any:&#10;Called at begin of `with` block. Turn tracing on.">
<text text-anchor="start" x="94.5" y="-460" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">__enter__()</text>
</a>
</g>
<g id="a_node3_25"><a xlink:href="Tracer.ipynb" xlink:title="__exit__(self, exc_tp:Type, exc_value:BaseException, exc_traceback:traceback) &#45;&gt; Union[bool, NoneType]:&#10;Called at end of `with` block. Turn tracing off.&#10;Return `None` if ok, not `None` if internal error.">
<text text-anchor="start" x="94.5" y="-449" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">__exit__()</text>
</a>
</g>
<g id="a_node3_26"><a xlink:href="Tracer.ipynb" xlink:title="__init__(self, file:TextIO=&lt;ipykernel.iostream.OutStream object at 0x7fc4dfefefd0&gt;) &#45;&gt; None:&#10;Create a new tracer.&#10;If `file` is given, output to `file` instead of stdout.">
<text text-anchor="start" x="94.5" y="-438" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">__init__()</text>
</a>
</g>
<g id="a_node3_27"><a xlink:href="Tracer.ipynb" xlink:title="changed_vars(self, new_vars:Dict[str, Any]) &#45;&gt; Dict[str, Any]:&#10;Track changed variables, based on `new_vars` observed.">
<text text-anchor="start" x="94.5" y="-427" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">changed_vars()</text>
</a>
</g>
<g id="a_node3_28"><a xlink:href="Tracer.ipynb" xlink:title="_traceit(self, frame:frame, event:str, arg:Any) &#45;&gt; Union[Callable, NoneType]:&#10;Internal tracing function.">
<text text-anchor="start" x="94.5" y="-415" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">_traceit()</text>
</a>
</g>
<g id="a_node3_29"><a xlink:href="Tracer.ipynb" xlink:title="is_internal_error(self, exc_tp:type, exc_value:BaseException, exc_traceback:traceback) &#45;&gt; bool:&#10;Return True if exception was raised from `Tracer` or a subclass.">
<text text-anchor="start" x="94.5" y="-404" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">is_internal_error()</text>
</a>
</g>
<g id="a_node3_30"><a xlink:href="Tracer.ipynb" xlink:title="log(self, *objects:Any, sep:str=&#39; &#39;, end:str=&#39;\n&#39;, flush:bool=False) &#45;&gt; None:&#10;Like print(), but always sending to file given at initialization,&#10;and always flushing">
<text text-anchor="start" x="94.5" y="-393" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">log()</text>
</a>
</g>
<g id="a_node3_31"><a xlink:href="Tracer.ipynb" xlink:title="print_debugger_status(self, frame:frame, event:str, arg:Any) &#45;&gt; None:&#10;Show current source line and changed vars">
<text text-anchor="start" x="94.5" y="-382" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">print_debugger_status()</text>
</a>
</g>
<g id="a_node3_32"><a xlink:href="Tracer.ipynb" xlink:title="traceit(self, frame:frame, event:str, arg:Any) &#45;&gt; None:&#10;Tracing function; called at every line. To be overloaded in subclasses.">
<text text-anchor="start" x="94.5" y="-372" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">traceit()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- Collector&#45;&gt;Tracer -->
<g id="edge2" class="edge">
<title>Collector&#45;&gt;Tracer</title>
<path fill="none" stroke="#000000" d="M163.5,-327.5544C163.5,-336.4294 163.5,-345.4332 163.5,-354.2282"/>
<polygon fill="none" stroke="#000000" points="160.0001,-354.4365 163.5,-364.4365 167.0001,-354.4365 160.0001,-354.4365"/>
</g>
<!-- ValueCollector -->
<g id="node4" class="node">
<title>ValueCollector</title>
<g id="a_node4"><a xlink:href="#" xlink:title="class ValueCollector:&#10;&quot;A class to collect local variables and their values.">
<polygon fill="none" stroke="#000000" points="185.5,-32 185.5,-96 303.5,-96 303.5,-32 185.5,-32"/>
<text text-anchor="start" x="193.5" y="-81.8" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">ValueCollector</text>
<polyline fill="none" stroke="#000000" points="185.5,-73 303.5,-73 "/>
<g id="a_node4_33"><a xlink:href="#" xlink:title="ValueCollector">
<g id="a_node4_34"><a xlink:href="#" xlink:title="__init__(self) &#45;&gt; None:&#10;Constructor.">
<text text-anchor="start" x="214.5" y="-61.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">__init__()</text>
</a>
</g>
<g id="a_node4_35"><a xlink:href="#" xlink:title="events(self) &#45;&gt; Set[str]:&#10;A set of (variable, value) pairs observed">
<text text-anchor="start" x="214.5" y="-50.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">events()</text>
</a>
</g>
<g id="a_node4_36"><a xlink:href="#" xlink:title="collect(self, frame:frame, event:str, arg:Any) &#45;&gt; None:&#10;Collector function. To be overloaded in subclasses.">
<text text-anchor="start" x="214.5" y="-39.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">collect()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- ValueCollector&#45;&gt;Collector -->
<g id="edge3" class="edge">
<title>ValueCollector&#45;&gt;Collector</title>
<path fill="none" stroke="#000000" d="M230.2053,-96.119C222.8467,-112.6532 213.4654,-133.7322 204.0784,-154.8238"/>
<polygon fill="none" stroke="#000000" points="200.7858,-153.6143 199.9173,-164.1735 207.181,-156.4605 200.7858,-153.6143"/>
</g>
<!-- Legend -->
<g id="node5" class="node">
<title>Legend</title>
<text text-anchor="start" x="321.5" y="-81.5" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="10.00" fill="#6a0dad">Legend</text>
<text text-anchor="start" x="321.5" y="-71.5" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00" fill="#000000">• </text>
<text text-anchor="start" x="328.5" y="-71.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="8.00" fill="#000000">public_method()</text>
<text text-anchor="start" x="321.5" y="-61.5" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00" fill="#000000">• </text>
<text text-anchor="start" x="328.5" y="-61.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="8.00" fill="#000000">private_method()</text>
<text text-anchor="start" x="321.5" y="-51.5" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00" fill="#000000">• </text>
<text text-anchor="start" x="328.5" y="-51.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="8.00" fill="#000000">overloaded_method()</text>
<text text-anchor="start" x="321.5" y="-42.3" font-family="Helvetica,sans-Serif" font-size="9.00" fill="#000000">Hover over names to see doc</text>
</g>
</g>
</svg>
